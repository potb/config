name: PR

permissions:
  contents: write
  actions: write
  pull-requests: write

on:
  pull_request:

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  check-blocked:
    name: Check if PR is blocked
    runs-on: ubuntu-latest
    outputs:
      blocked: ${{ steps.check.outputs.blocked }}
    steps:
      - name: Check for timeout label
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          labels=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[].name' --repo ${{ github.repository }})
          if echo "$labels" | grep -q "ci-timeout-blocked"; then
            echo "blocked=true" >> "$GITHUB_OUTPUT"
            echo "PR is blocked due to timeout label"
          else
            echo "blocked=false" >> "$GITHUB_OUTPUT"
          fi

  format:
    name: Format
    runs-on: ubuntu-latest
    needs: check-blocked
    if: needs.check-blocked.outputs.blocked != 'true'
    timeout-minutes: 15
    outputs:
      changed: ${{ steps.changed.outputs.changed }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: nixbuild/nix-quick-install-action@v33
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - run: nix fmt .
      - id: changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi
      - if: steps.changed.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "Apply nix fmt"
          git push origin HEAD:${{ github.head_ref }}

  build:
    name: build
    needs: [check-blocked, format]
    if: needs.check-blocked.outputs.blocked != 'true'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            system: nixos
          - os: macos-latest
            system: darwin
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - uses: nixbuild/nix-quick-install-action@v33
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - uses: cachix/cachix-action@v16
        with:
          name: potb
          authToken: ${{ secrets.CACHIX_TOKEN }}
          pushFilter: '(WebStorm|webstorm|-source(?:-|$))'
      - name: Build NixOS configuration
        if: matrix.system == 'nixos'
        run: nix build .#nixosConfigurations.charon.config.system.build.toplevel
      - name: Build Darwin configuration
        if: matrix.system == 'darwin'
        run: nix build .#darwinConfigurations.nyx.system

  handle-timeout:
    name: Handle timeout and block PR
    runs-on: ubuntu-latest
    needs: [format, build]
    if: always() && (needs.format.result == 'cancelled' || needs.build.result == 'cancelled')
    steps:
      - name: Label PR as blocked due to timeout
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "ci-timeout-blocked" --repo ${{ github.repository }}
          gh pr comment ${{ github.event.pull_request.number }} --body "ðŸš« **PR Blocked**: This pull request has been automatically blocked due to CI timeout (30+ minutes). Please optimize your changes to reduce build time, then remove the \`ci-timeout-blocked\` label to re-enable CI." --repo ${{ github.repository }}

