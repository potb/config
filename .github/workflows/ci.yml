name: CI

permissions:
  contents: write
  actions: write

on:
  pull_request:

jobs:
  make-caches:
    name: Build and cache
    strategy:
      matrix:
        os: [ubuntu-latest]
        id: [1, 2]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
      - uses: nixbuild/nix-quick-install-action@v32
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-individual-${{ matrix.id }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-common-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: nix-${{ runner.os }}-individual-${{ matrix.id }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never
      - name: Build NixOS configuration
        run: nix build .#nixosConfigurations.charon.config.system.build.toplevel
      - name: Build home-manager configuration
        run: nix build .#homeConfigurations."potb@charon".activationPackage
      - name: Format Nix code
        run: nix fmt .
      - name: Commit formatted changes
        if: matrix.id == 1
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -am "Apply nix fmt"
            git push origin HEAD:${{ github.head_ref }}
          fi

  merge-caches:
    name: Merge caches
    needs: make-caches
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Merge Nix store caches
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-common-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-all-matches: |
            nix-${{ runner.os }}-individual-1-${{ hashFiles('**/*.nix', '**/flake.lock') }}
            nix-${{ runner.os }}-individual-2-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: |
            nix-${{ runner.os }}-individual-
            nix-${{ runner.os }}-common-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never
